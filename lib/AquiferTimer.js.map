{"version":3,"sources":["../src/AquiferTimer.js"],"names":["ONE_MIN_MILLIS","ONE_SEC_MILLIS","AquiferTimer","timeoutMillis","startTime","Date","getTime","elapsedTime","sleepMillis","AquiferWait","sleep"],"mappings":";;;;;;;;;;;;;AACA;;AADA;AAIA,IAAMA,cAAc,GAAG,KAAvB;AACA,IAAMC,cAAc,GAAG,IAAvB;;IAGaC,Y;;;AACX,wBAAYC,aAAZ,EAA2B;AAAA;AACzB,SAAKA,aAAL,GAAqBA,aAArB;AACA,SAAKC,SAAL,GAAiB,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;AACD;;;;kCAEa;AACZ,aAAO,IAAID,IAAJ,GAAWC,OAAX,KAAuB,KAAKF,SAAnC;AACD;;;wCAEmB;AAClB,UAAMG,WAAW,GAAG,KAAKA,WAAL,EAApB;;AAEA,UAAIA,WAAW,IAAIP,cAAnB,EAAmC;AACjC,yBAAUO,WAAW,GAAGP,cAAxB;AACD;;AAAC,UAAIO,WAAW,IAAIN,cAAnB,EAAmC;AACnC,yBAAUM,WAAW,GAAGN,cAAxB;AACD;;AACD,uBAAUM,WAAV;AACD;;;gCAOW;AACV,aAAO,KAAKA,WAAL,KAAqB,KAAKJ,aAAjC;AACD;;;gCAEWK,W,EAAa;AACvBC,+BAAYC,KAAZ,CAAkBF,WAAlB;AACD;;;+BAViBL,a,EAAe;AAC/B,aAAO,IAAID,YAAJ,CAAiBC,aAAjB,CAAP;AACD","sourcesContent":["// @ts-check\nimport { AquiferWait } from './AquiferWait';\n\n\nconst ONE_MIN_MILLIS = 60000;\nconst ONE_SEC_MILLIS = 1000;\n\n\nexport class AquiferTimer {\n  constructor(timeoutMillis) {\n    this.timeoutMillis = timeoutMillis;\n    this.startTime = new Date().getTime();\n  }\n\n  elapsedTime() {\n    return new Date().getTime() - this.startTime;\n  }\n\n  elapsedTimeString() {\n    const elapsedTime = this.elapsedTime();\n\n    if (elapsedTime >= ONE_MIN_MILLIS) {\n      return `${elapsedTime / ONE_MIN_MILLIS} minutes`;\n    } if (elapsedTime >= ONE_SEC_MILLIS) {\n      return `${elapsedTime / ONE_SEC_MILLIS} seconds`;\n    }\n    return `${elapsedTime} milliseconds`;\n  }\n\n\n  static startTimer(timeoutMillis) {\n    return new AquiferTimer(timeoutMillis);\n  }\n\n  isExpired() {\n    return this.elapsedTime() > this.timeoutMillis;\n  }\n\n  threadSleep(sleepMillis) {\n    AquiferWait.sleep(sleepMillis);\n  }\n}\n"],"file":"AquiferTimer.js"}